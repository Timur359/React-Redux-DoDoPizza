{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20520\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B \\u043D\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0443\\\\React-Dominos\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Categories, SortPopup } from '../components';\nimport PizzaBlock from '../components/PizzaBlock';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategory, setSortBy } from '../redux/actions/filters';\nimport { fetchPizzas } from '../redux/actions/pizzas';\nimport { PizzaLoadingBlock } from '../components';\nimport { addPizzaToCart } from '../redux/actions/cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categoryNames = ['Мясные', 'Вегетарианская', 'Гриль', 'Острые', 'Закрытые'];\nconst sortItem = [{\n  name: 'популярности',\n  type: 'popular',\n  order: 'desc'\n}, {\n  name: 'цене',\n  type: 'price',\n  order: 'desc'\n}, {\n  name: 'названию',\n  type: 'name',\n  order: 'asc'\n}];\n\nfunction Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const items = useSelector(_ref => {\n    let {\n      pizzas\n    } = _ref;\n    return pizzas.items;\n  });\n  const cartItems = useSelector(_ref2 => {\n    let {\n      cart\n    } = _ref2;\n    return cart.items;\n  });\n  const isLoaded = useSelector(_ref3 => {\n    let {\n      pizzas\n    } = _ref3;\n    return pizzas.isLoaded;\n  });\n  const {\n    category,\n    sortBy\n  } = useSelector(_ref4 => {\n    let {\n      filters\n    } = _ref4;\n    return filters;\n  });\n  React.useEffect(() => {\n    dispatch(fetchPizzas(sortBy, category));\n  }, [category, sortBy]);\n  const onSelectItem = React.useCallback(type => {\n    dispatch(setCategory(type));\n  }, []);\n  const onSelectSortType = React.useCallback(index => {\n    dispatch(setSortBy(index));\n  }, []);\n\n  const handleAddPizzaToCart = obj => {\n    dispatch(addPizzaToCart(obj));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        activeItem: category,\n        onClickItem: onSelectItem,\n        items: categoryNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SortPopup, {\n        activeSortType: sortBy.type,\n        items: sortItem,\n        onClickSortType: onSelectSortType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoaded ? items.map(item => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n        onClickAddPizza: handleAddPizzaToCart,\n        addedCount: cartItems[item.id] && cartItems[item.id].items.length,\n        ...item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)) : Array(10).fill(0).map((_, index) => /*#__PURE__*/_jsxDEV(PizzaLoadingBlock, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Home, \"hPdwZd17Nkr0x2uX/6cVDDarsQE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/20520/OneDrive/Рабочий стол/Проект/Проекты на загрузку/React-Dominos/src/pages/Home.jsx"],"names":["React","Categories","SortPopup","PizzaBlock","useSelector","useDispatch","setCategory","setSortBy","fetchPizzas","PizzaLoadingBlock","addPizzaToCart","categoryNames","sortItem","name","type","order","Home","dispatch","items","pizzas","cartItems","cart","isLoaded","category","sortBy","filters","useEffect","onSelectItem","useCallback","onSelectSortType","index","handleAddPizzaToCart","obj","map","item","id","length","Array","fill","_"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Categories, SortPopup } from '../components';\r\nimport PizzaBlock from '../components/PizzaBlock';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setCategory, setSortBy } from '../redux/actions/filters';\r\nimport { fetchPizzas } from '../redux/actions/pizzas';\r\nimport { PizzaLoadingBlock } from '../components';\r\nimport { addPizzaToCart } from '../redux/actions/cart';\r\n\r\nconst categoryNames = [\r\n 'Мясные',\r\n 'Вегетарианская',\r\n 'Гриль',\r\n 'Острые',\r\n 'Закрытые',\r\n];\r\n\r\nconst sortItem = [\r\n { name: 'популярности', type: 'popular', order: 'desc' },\r\n { name: 'цене', type: 'price', order: 'desc' },\r\n { name: 'названию', type: 'name', order: 'asc' },\r\n];\r\n\r\nfunction Home() {\r\n const dispatch = useDispatch();\r\n const items = useSelector(({ pizzas }) => pizzas.items);\r\n const cartItems = useSelector(({ cart }) => cart.items);\r\n const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded);\r\n const { category, sortBy } = useSelector(({ filters }) => filters);\r\n\r\n React.useEffect(() => {\r\n  dispatch(fetchPizzas(sortBy, category));\r\n }, [category, sortBy]);\r\n\r\n const onSelectItem = React.useCallback((type) => {\r\n  dispatch(setCategory(type));\r\n }, []);\r\n\r\n const onSelectSortType = React.useCallback((index) => {\r\n  dispatch(setSortBy(index));\r\n }, []);\r\n\r\n const handleAddPizzaToCart = (obj) => {\r\n  dispatch(addPizzaToCart(obj));\r\n };\r\n\r\n return (\r\n  <div className=\"container\">\r\n   <div className=\"content__top\">\r\n    <Categories\r\n     activeItem={category}\r\n     onClickItem={onSelectItem}\r\n     items={categoryNames}\r\n    />\r\n    <SortPopup\r\n     activeSortType={sortBy.type}\r\n     items={sortItem}\r\n     onClickSortType={onSelectSortType}\r\n    />\r\n   </div>\r\n   <h2 className=\"content__title\">Все пиццы</h2>\r\n   <div className=\"content__items\">\r\n    {isLoaded\r\n     ? items.map((item) => (\r\n        <PizzaBlock\r\n         onClickAddPizza={handleAddPizzaToCart}\r\n         key={item.id}\r\n         addedCount={cartItems[item.id] && cartItems[item.id].items.length}\r\n         {...item}\r\n        />\r\n       ))\r\n     : Array(10)\r\n        .fill(0)\r\n        .map((_, index) => <PizzaLoadingBlock key={index} />)}\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}