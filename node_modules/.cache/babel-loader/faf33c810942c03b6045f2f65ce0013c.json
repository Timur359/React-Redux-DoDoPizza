{"ast":null,"code":"import { Simulate } from 'react-dom/cjs/react-dom-test-utils.production.min';\nconst initialState = {\n  items: {},\n  totalPrice: 0,\n  totalCount: 0\n};\n\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0);\n\nconst _get = (obj, path) => {\n  const [firstKey, ...keys] = path.split('.');\n  return keys.reduce((val, key) => {\n    return val[key];\n  }, obj[firstKey]);\n};\n\nconst getTotalSum = (obj, path) => {\n  return Object.values(obj).reduce((sum, obj) => {\n    const value = _get(obj, path);\n\n    return sum + value;\n  }, 0);\n};\n\nconst cart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_PIZZA_CART':\n      {\n        const currentPizzaItems = !state.items[action.payload.id] ? [action.payload] : [...state.items[action.payload.id].items, action.payload];\n        const newItems = { ...state.items,\n          [action.payload.id]: {\n            items: currentPizzaItems,\n            totalPrice: getTotalPrice(currentPizzaItems)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'PLUS_CART_ITEM':\n      {\n        const newObjectItem = [...state.items[action.payload].items, state.items[action.payload].items[0]];\n        const newItems = { ...state.items,\n          [action.payload]: {\n            items: newObjectItem,\n            totalPrice: getTotalPrice(newObjectItem)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'MINUS_CART_ITEM':\n      {\n        const oldItems = state.items[action.payload].items;\n        const newObjectItem = oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\n        const newItems = { ...state.items,\n          [action.payload]: {\n            items: newObjectItem,\n            totalPrice: getTotalPrice(newObjectItem)\n          }\n        };\n        const totalCount = getTotalSum(newItems, 'items.length');\n        const totalPrice = getTotalSum(newItems, 'totalPrice');\n        return { ...state,\n          items: newItems,\n          totalCount,\n          totalPrice\n        };\n      }\n\n    case 'CLEAR_CART':\n      return {\n        items: {},\n        totalPrice: 0,\n        totalCount: 0\n      };\n\n    case 'REMOVE_CART_ITEM':\n      const newItems = { ...state.items\n      };\n      const currentTotalPrice = newItems[action.payload].totalPrice;\n      const currentTotalCount = newItems[action.payload].items.length;\n      delete newItems[action.payload];\n      return { ...state,\n        items: newItems,\n        totalPrice: state.totalPrice - currentTotalPrice,\n        totalCount: state.totalCount - currentTotalCount\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["C:/Users/20520/OneDrive/Рабочий стол/Проект/Проекты на загрузку/React-Dominos/src/redux/reducer/cart.js"],"names":["Simulate","initialState","items","totalPrice","totalCount","getTotalPrice","arr","reduce","sum","obj","price","_get","path","firstKey","keys","split","val","key","getTotalSum","Object","values","value","cart","state","action","type","currentPizzaItems","payload","id","newItems","newObjectItem","oldItems","length","slice","currentTotalPrice","currentTotalCount"],"mappings":"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","sourcesContent":["import { Simulate } from 'react-dom/cjs/react-dom-test-utils.production.min';\r\n\r\nconst initialState = {\r\n items: {},\r\n totalPrice: 0,\r\n totalCount: 0,\r\n};\r\n\r\nconst getTotalPrice = (arr) => arr.reduce((sum, obj) => obj.price + sum, 0);\r\n\r\nconst _get = (obj, path) => {\r\n const [firstKey, ...keys] = path.split('.');\r\n return keys.reduce((val, key) => {\r\n  return val[key];\r\n }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj, path) => {\r\n return Object.values(obj).reduce((sum, obj) => {\r\n  const value = _get(obj, path);\r\n  return sum + value;\r\n }, 0);\r\n};\r\n\r\nconst cart = (state = initialState, action) => {\r\n switch (action.type) {\r\n  case 'ADD_PIZZA_CART': {\r\n   const currentPizzaItems = !state.items[action.payload.id]\r\n    ? [action.payload]\r\n    : [...state.items[action.payload.id].items, action.payload];\r\n\r\n   const newItems = {\r\n    ...state.items,\r\n    [action.payload.id]: {\r\n     items: currentPizzaItems,\r\n     totalPrice: getTotalPrice(currentPizzaItems),\r\n    },\r\n   };\r\n\r\n   const totalCount = getTotalSum(newItems, 'items.length');\r\n   const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n   return {\r\n    ...state,\r\n    items: newItems,\r\n    totalCount,\r\n    totalPrice,\r\n   };\r\n  }\r\n\r\n  case 'PLUS_CART_ITEM': {\r\n   const newObjectItem = [\r\n    ...state.items[action.payload].items,\r\n    state.items[action.payload].items[0],\r\n   ];\r\n\r\n   const newItems = {\r\n    ...state.items,\r\n    [action.payload]: {\r\n     items: newObjectItem,\r\n     totalPrice: getTotalPrice(newObjectItem),\r\n    },\r\n   };\r\n   const totalCount = getTotalSum(newItems, 'items.length');\r\n   const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n   return {\r\n    ...state,\r\n    items: newItems,\r\n    totalCount,\r\n    totalPrice,\r\n   };\r\n  }\r\n\r\n  case 'MINUS_CART_ITEM': {\r\n   const oldItems = state.items[action.payload].items;\r\n   const newObjectItem =\r\n    oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\r\n   const newItems = {\r\n    ...state.items,\r\n    [action.payload]: {\r\n     items: newObjectItem,\r\n     totalPrice: getTotalPrice(newObjectItem),\r\n    },\r\n   };\r\n\r\n   const totalCount = getTotalSum(newItems, 'items.length');\r\n   const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n   return {\r\n    ...state,\r\n    items: newItems,\r\n    totalCount,\r\n    totalPrice,\r\n   };\r\n  }\r\n\r\n  case 'CLEAR_CART':\r\n   return {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0,\r\n   };\r\n\r\n  case 'REMOVE_CART_ITEM':\r\n   const newItems = {\r\n    ...state.items,\r\n   };\r\n   const currentTotalPrice = newItems[action.payload].totalPrice;\r\n   const currentTotalCount = newItems[action.payload].items.length;\r\n   delete newItems[action.payload];\r\n   return {\r\n    ...state,\r\n    items: newItems,\r\n    totalPrice: state.totalPrice - currentTotalPrice,\r\n    totalCount: state.totalCount - currentTotalCount,\r\n   };\r\n\r\n  default:\r\n   return state;\r\n }\r\n};\r\n\r\nexport default cart;\r\n"]},"metadata":{},"sourceType":"module"}